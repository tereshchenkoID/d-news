---
title: D-news
lang: en
---
extends layouts/_layout

block content
  +header#header

  main.main
    //notification--active
    +notification.js-notification

    //cookie--active
    +cookie.js-cookie

    //popup--active
    +popup.js-popup

    section.section
      .container-fluid
        .container
          .widget
            .widget__header
              +widget-title('Archive', false)
            .widget__body
              .archive
                .archive__header
                  button.archive__item.archive__item--active.js-archive-item 2024
                  button.archive__item.js-archive-item 2023
                  button.archive__item.js-archive-item 2022
                  button.archive__item.js-archive-item 2021
                  button.archive__item.js-archive-item 2020
                  button.archive__item.js-archive-item 2019
                  button.archive__item.js-archive-item 2018
                  button.archive__item.js-archive-item 2017

                .archive__body
                  .calendar-container#calendar-container

          .row
            .col.col-md-12.col-xl-9.col-verticall-offset
              .widget.widget--custom.u-mb-0
                .widget__header
                  .widget-title.widget-title--custom
                    h3.widget-title__text Archive
                    .widget-title__block
                      .swiper-navigation
                        a(href="#").swiper-button-prev
                        .swiper-title 23 December 2023
                        a(href="#").swiper-button-next

                      button.button-calendar#button-calendar
                        svg(xmlns='http://www.w3.org/2000/svg' width='28' height='28' viewBox='0 0 28 28')
                          defs
                            style.
                              .cls-1, .cls-2 {
                                fill: currentColor;
                              }

                              .cls-2 {
                                fill-rule: evenodd;
                              }
                          circle#Ellipse_1_copy.cls-1(data-name='Ellipse 1 copy' cx='11.453' cy='9.375' r='1.359')
                          circle#Ellipse_1_copy_2.cls-1(data-name='Ellipse 1 copy 2' cx='15.547' cy='9.375' r='1.359')
                          path#Ellipse_1_copy_3.cls-2(data-name='Ellipse 1 copy 3' d='M19.641,8a1.375,1.375,0,1,1-1.359,1.375A1.367,1.367,0,0,1,19.641,8Z')
                          circle#Ellipse_1_copy_4.cls-1(data-name='Ellipse 1 copy 4' cx='7.359' cy='13.5' r='1.359')
                          circle#Ellipse_1_copy_4-2.cls-1(data-name='Ellipse 1 copy 4' cx='11.453' cy='13.5' r='1.359')
                          circle#Ellipse_1_copy_4-3.cls-1(data-name='Ellipse 1 copy 4' cx='15.547' cy='13.5' r='1.359')
                          path#Ellipse_1_copy_4-4.cls-2(data-name='Ellipse 1 copy 4' d='M19.641,12.125A1.375,1.375,0,1,1,18.281,13.5,1.367,1.367,0,0,1,19.641,12.125Z')
                          path#Ellipse_1_copy_5.cls-2(data-name='Ellipse 1 copy 5' d='M7.359,16.25A1.375,1.375,0,1,1,6,17.625,1.367,1.367,0,0,1,7.359,16.25Z')
                          path#Ellipse_1_copy_5-2.cls-2(data-name='Ellipse 1 copy 5' d='M11.453,16.25a1.375,1.375,0,1,1-1.359,1.375A1.367,1.367,0,0,1,11.453,16.25Z')
                          path#Ellipse_1_copy_5-3.cls-2(data-name='Ellipse 1 copy 5' d='M15.547,16.25a1.375,1.375,0,1,1-1.36,1.375A1.367,1.367,0,0,1,15.547,16.25Z')

                .widget__body
                  .row
                    - var n = 1;
                      while n < 6
                        .col.col-verticall-offset(class=`${n === 1 && 'u-pt-0'}`)
                          +post-medium(n++, true).post-medium--row

            .col.col-xl-hidden.col-xl-3.col-verticall-offset.sa-sticky
              .calendar
                .widget.u-mb-0
                  .widget__header
                    +widget-title('Calendar', false)
                  .widget__body.u-mb-0
                    input(type="hidden" id="constrained" data-inline="true" data-multiple="true" data-open-on="today" data-time="true")

  //https://wwilsman.github.io/Datepicker.js/
  script.
    new Datepicker('#constrained', {
      multiple: false,
      time: false,
      max: (function () {
        const date = new Date();
        date.setDate(date.getDate());
        return date;
      })(),
    });

    new Datepicker('#button-calendar', {
      multiple: false,
      time: false,
      max: (function () {
        const date = new Date();
        date.setDate(date.getDate());
        return date;
      })()
    });

    function generateCalendar() {
      const yearInput = document.querySelector(".archive__item--active").innerText;
      const calendarContainer = document.getElementById("calendar-container");
      calendarContainer.innerHTML = "";

      for (let month = 0; month < 12; month++) {
        const monthContainer = document.createElement("div");
        // monthContainer.classList.add("month-container");

        const monthHeader = document.createElement("div");
        // monthHeader.classList.add("month");
        monthHeader.textContent = `${getMonthName(month)} ${yearInput}`;
        monthContainer.appendChild(monthHeader);

        const table = document.createElement("table");
        const headerRow = table.createTHead().insertRow();
        const weekdays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

        weekdays.forEach(day => {
          const th = document.createElement("th");
          th.textContent = day;
          headerRow.appendChild(th);
        });

        const firstDayOfMonth = new Date(yearInput, month, 1)
        const lastDayOfMonth = new Date(yearInput, month + 1, 0)
        const daysInMonth = lastDayOfMonth.getDate()
        const startingDay = firstDayOfMonth.getDay()
        const currentDate = new Date()
        let dayCounter = 1

        for (let i = 0; i < 6; i++) {
          const row = table.insertRow();

          for (let j = 0; j < 7; j++) {
            const cell = row.insertCell();

            if (i === 0 && j < startingDay) {
              continue;
            }

            if (dayCounter > daysInMonth) {
              break;
            }

            cell.textContent = dayCounter;
            cell.setAttribute("data-date", `${yearInput}-${month + 1}-${dayCounter}`);
            cell.addEventListener("click", handleDateClick);

            if (currentDate.getDate() === dayCounter && currentDate.getMonth() === month && currentDate.getFullYear() === parseInt(yearInput, 10)) {
              cell.classList.add("active");
            }

            if ((currentDate.getMonth() < month && currentDate.getFullYear() <= parseInt(yearInput, 10)) || (currentDate.getDate() < dayCounter && currentDate.getMonth() <= month) && currentDate.getFullYear() === parseInt(yearInput, 10)) {
              cell.classList.add("disabled");
            }

            dayCounter++;
          }
        }

        monthContainer.appendChild(table);
        calendarContainer.appendChild(monthContainer);
      }
    }

    function getMonthName(month) {
      const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
      return monthNames[month];
    }

    function handleDateClick(event) {
      const selectedDate = event.target.getAttribute("data-date");
      alert(`Selected Date: ${selectedDate}`);
    }

    generateCalendar()

    $('.js-archive-item').on('click', function() {
      $('.js-archive-item').removeClass('archive__item--active')
      $(this).addClass('archive__item--active')
      generateCalendar()
    })
